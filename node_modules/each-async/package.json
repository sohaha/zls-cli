{
  "_args": [
    [
      {
        "raw": "each-async@^1.0.0",
        "scope": null,
        "escapedName": "each-async",
        "name": "each-async",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init\\node_modules\\download"
    ]
  ],
  "_from": "each-async@>=1.0.0 <2.0.0",
  "_id": "each-async@1.1.1",
  "_inCache": true,
  "_location": "/each-async",
  "_nodeVersion": "0.10.32",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.1.16",
  "_phantomChildren": {},
  "_requested": {
    "raw": "each-async@^1.0.0",
    "scope": null,
    "escapedName": "each-async",
    "name": "each-async",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/bin-wrapper",
    "/download"
  ],
  "_resolved": "https://registry.npmjs.org/each-async/-/each-async-1.1.1.tgz",
  "_shasum": "dee5229bdf0ab6ba2012a395e1b869abf8813473",
  "_shrinkwrap": null,
  "_spec": "each-async@^1.0.0",
  "_where": "S:\\SDK\\www\\Z\\zls.init\\node_modules\\download",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/each-async/issues"
  },
  "dependencies": {
    "onetime": "^1.0.0",
    "set-immediate-shim": "^1.0.0"
  },
  "description": "Async concurrent iterator (async forEach)",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "dee5229bdf0ab6ba2012a395e1b869abf8813473",
    "tarball": "https://registry.npmjs.org/each-async/-/each-async-1.1.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "65f7f663e0e1a323c11bd0e036a08f585ab34a9c",
  "homepage": "https://github.com/sindresorhus/each-async#readme",
  "keywords": [
    "each",
    "async",
    "asynchronous",
    "iteration",
    "iterate",
    "loop",
    "foreach",
    "parallel",
    "concurrent",
    "array",
    "flow",
    "control flow"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "each-async",
  "optionalDependencies": {},
  "readme": "# each-async [![Build Status](https://travis-ci.org/sindresorhus/each-async.svg?branch=master)](https://travis-ci.org/sindresorhus/each-async)\n\n> Async concurrent iterator (async forEach)\n\nLike [async.each()](https://github.com/caolan/async#eacharr-iterator-callback), but tiny.\n\nI often use `async.each()` for doing async operations when iterating, but I almost never use the other gadzillion methods in `async`.\n\nAsync iteration is one of the most used async control flow patterns.\n\n\n## Install\n\n```sh\n$ npm install --save each-async\n```\n\n\n## Usage\n\n```js\nvar eachAsync = require('each-async');\n\neachAsync(['foo','bar','baz'], function (item, index, done) {\n\tconsole.log(item, index);\n\tdone();\n}, function (error) {\n\tconsole.log('finished');\n});\n//=> foo 0\n//=> bar 1\n//=> baz 2\n//=> finished\n```\n\n\n## API\n\n### eachAsync(array, callback, finishedCallback)\n\n#### array\n\nThe array you want to iterate.\n\n#### callback(item, index, done)\n\nA function which is called for each item in the array with the following arguments:\n\n- `item`: the current item in the array\n- `index`: the current index\n- `done([error])`: call this when you're done with an optional error. Supplying anything other than `undefined`/`null` will stop the iteration.\n\nNote that order is not guaranteed since each item is handled concurrently.\n\n#### finishedCallback(error)\n\nA function which is called when the iteration is finished or on the first error. First argument is the error passed from `done()` in the `callback`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/each-async.git"
  },
  "scripts": {
    "test": "mocha --timeout 20000"
  },
  "version": "1.1.1"
}
