{
  "_args": [
    [
      {
        "raw": "object-hash@^1.1.4",
        "scope": null,
        "escapedName": "object-hash",
        "name": "object-hash",
        "rawSpec": "^1.1.4",
        "spec": ">=1.1.4 <2.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init\\node_modules\\eslint-loader"
    ]
  ],
  "_from": "object-hash@>=1.1.4 <2.0.0",
  "_id": "object-hash@1.1.8",
  "_inCache": true,
  "_location": "/object-hash",
  "_nodeVersion": "8.0.0-pre",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/object-hash-1.1.8.tgz_1491750842080_0.8127299554180354"
  },
  "_npmUser": {
    "name": "addaleax",
    "email": "anna@addaleax.net"
  },
  "_npmVersion": "4.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "object-hash@^1.1.4",
    "scope": null,
    "escapedName": "object-hash",
    "name": "object-hash",
    "rawSpec": "^1.1.4",
    "spec": ">=1.1.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-loader"
  ],
  "_resolved": "https://registry.npmjs.org/object-hash/-/object-hash-1.1.8.tgz",
  "_shasum": "28a659cf987d96a4dabe7860289f3b5326c4a03c",
  "_shrinkwrap": null,
  "_spec": "object-hash@^1.1.4",
  "_where": "S:\\SDK\\www\\Z\\zls.init\\node_modules\\eslint-loader",
  "author": {
    "name": "Scott Puleo",
    "email": "puleos@gmail.com"
  },
  "browser": "./dist/object_hash.js",
  "bugs": {
    "url": "https://github.com/puleos/object-hash/issues"
  },
  "dependencies": {},
  "description": "Generate hashes from javascript objects in node and the browser.",
  "devDependencies": {
    "browserify": "^13.0.0",
    "gulp": "^3.9.0",
    "gulp-browserify": "^0.5.1",
    "gulp-coveralls": "^0.1.4",
    "gulp-exec": "^2.1.2",
    "gulp-istanbul": "^0.10.3",
    "gulp-jshint": "^2.0.0",
    "gulp-mocha": "^2.2.0",
    "gulp-rename": "^1.2.0",
    "gulp-uglify": "^1.5.1",
    "jshint": "^2.8.0",
    "jshint-stylish": "^2.1.0",
    "karma": "^0.13.15",
    "karma-chrome-launcher": "^0.2.2",
    "karma-firefox-launcher": "^0.1.7",
    "karma-mocha": "^0.2.1",
    "karma-phantomjs-launcher": "^0.2.1",
    "mocha": "^2.3.4",
    "phantomjs": "^1.9.19"
  },
  "directories": {},
  "dist": {
    "shasum": "28a659cf987d96a4dabe7860289f3b5326c4a03c",
    "tarball": "https://registry.npmjs.org/object-hash/-/object-hash-1.1.8.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "469439a30fdd41e2f35f2a6aeddebb6a8d923f75",
  "homepage": "https://github.com/puleos/object-hash",
  "keywords": [
    "object",
    "hash",
    "sha1",
    "md5"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "addaleax",
      "email": "anna@addaleax.net"
    },
    {
      "name": "puleos",
      "email": "puleos@gmail.com"
    }
  ],
  "name": "object-hash",
  "optionalDependencies": {},
  "readme": "# object-hash\n\nGenerate hashes from objects and values in node and the browser.  Uses node.js\ncrypto module for hashing.  Supports SHA1 and many others (depending on the platform)\nas well as custom streams (e.g. CRC32).\n\n[![NPM](https://nodei.co/npm/object-hash.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/object-hash)\n[![NPM](https://nodei.co/npm-dl/object-hash.png?months=6&height=3)](https://www.npmjs.com/package/object-hash)\n\n[![Travis CI](https://secure.travis-ci.org/puleos/object-hash.png?branch=master)](https://secure.travis-ci.org/puleos/object-hash?branch=master)\n[![Coverage Status](https://coveralls.io/repos/puleos/object-hash/badge.svg?branch=master&service=github)](https://coveralls.io/github/puleos/object-hash?branch=master)\n\n* Hash values of any type.\n* Supports a keys only option for grouping similar objects with different values.\n\n```js\nvar hash = require('object-hash');\n\nhash({foo: 'bar'}) // => '67b69634f9880a282c14a0f0cb7ba20cf5d677e9'\nhash([1, 2, 2.718, 3.14159]) // => '136b9b88375971dff9f1af09d7356e3e04281951'\n```\n\n## Versioning Disclaimer\n\n**IMPORTANT:** If you need lasting hash consistency, you should should lock `object-hash` at a specific version, because new versions (even patch versions) are likely to affect the result. For more info, see [this discussion](https://github.com/puleos/object-hash/issues/30).\n\n## hash(value, options);\nGenerate a hash from any object or type.  Defaults to sha1 with hex encoding.\n*  `algorithm` hash algo to be used: 'sha1', 'md5'. default: sha1\n*  `excludeValues` {true|false} hash object keys, values ignored. default: false\n*  `encoding` hash encoding, supports 'buffer', 'hex', 'binary', 'base64'. default: hex\n*  `ignoreUnknown` {true|*false} ignore unknown object types. default: false\n*  `replacer` optional function that replaces values before hashing. default: accept all values\n*  `respectFunctionProperties` {true|false} Whether properties on functions are considered when hashing. default: true\n*  `respectFunctionNames` {true|false} consider `name` property of functions for hashing. default: true\n*  `respectType` {true|false} Whether special type attributes (`.prototype`, `.__proto__`, `.constructor`)\n   are hashed. default: true\n*  `unorderedArrays` {true|false} Sort all arrays using before hashing. Note that this affects *all* collections,\n   i.e. including typed arrays, Sets, Maps, etc. default: false\n*  `unorderedSets` {true|false} Sort `Set` and `Map` instances before hashing, i.e. make\n   `hash(new Set([1, 2])) == hash(new Set([2, 1]))` return `true`. default: true\n\n## hash.sha1(value);\nHash using the sha1 algorithm.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'sha1'})*\n\n## hash.keys(value);\nHash object keys using the sha1 algorithm, values ignored.\n\n*Sugar method, equivalent to hash(value, {excludeValues: true})*\n\n## hash.MD5(value);\nHash using the md5 algorithm.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'md5'})*\n\n## hash.keysMD5(value);\nHash object keys using the md5 algorithm, values ignored.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'md5', excludeValues: true})*\n\n## hash.writeToStream(value, [options,] stream):\nWrite the information that would otherwise have been hashed to a stream, e.g.:\n```js\nhash.writeToStream({foo: 'bar', a: 42}, {respectType: false}, process.stdout)\n// => e.g. 'object:a:number:42foo:string:bar'\n```\n\n## Installation\n\nnode:\n```js\nnpm install object-hash\n```\n\nbrowser: */dist/object_hash.js*\n```\n<script src=\"object_hash.js\" type=\"text/javascript\"></script>\n\n<script>\n  var hash = objectHash.sha1({foo:'bar'}); \n  \n  console.log(hash); // e003c89cdf35cdf46d8239b4692436364b7259f9\n</script>\n```\n\n## Example usage\n```js\nvar hash = require('object-hash');\n\nvar peter = {name: 'Peter', stapler: false, friends: ['Joanna', 'Michael', 'Samir'] };\nvar michael = {name: 'Michael', stapler: false, friends: ['Peter', 'Samir'] };\nvar bob = {name: 'Bob', stapler: true, friends: [] };\n\n/***\n * sha1 hex encoding (default)\n */\nhash(peter);\n// 14fa461bf4b98155e82adc86532938553b4d33a9\nhash(michael);\n// 4b2b30e27699979ce46714253bc2213010db039c\nhash(bob);\n// 38d96106bc8ef3d8bd369b99bb6972702c9826d5\n\n/***\n * hash object keys, values ignored\n */\nhash(peter, { excludeValues: true });\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\nhash(michael, { excludeValues: true });\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\nhash.keys(bob);\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\n\n/***\n * md5 base64 encoding\n */\nhash(peter, { algorithm: 'md5', encoding: 'base64' });\n// 6rkWaaDiG3NynWw4svGH7g==\nhash(michael, { algorithm: 'md5', encoding: 'base64' });\n// djXaWpuWVJeOF8Sb6SFFNg==\nhash(bob, { algorithm: 'md5', encoding: 'base64' });\n// lFzkw/IJ8/12jZI0rQeS3w==\n```\n\n## Legacy Browser Support\nIE <= 8 and Opera <= 11 support dropped in version 0.3.0.  If you require \nlegacy browser support you must either use an ES5 shim or use version 0.2.5\nof this module.\n\n## Development\n\n```\ngit clone https://github.com/puleos/object-hash\n```\n\n### gulp tasks\n* `gulp watch` (default) watch files, test and lint on change/add\n* `gulp test` unit tests\n* `gulp karma` browser unit tests\n* `gulp lint` jshint\n* `gulp dist` create browser version in /dist\n\n## License\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/puleos/object-hash.git"
  },
  "scripts": {
    "prepublish": "gulp dist",
    "test": "node ./node_modules/.bin/mocha test"
  },
  "version": "1.1.8"
}
