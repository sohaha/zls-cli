{
  "_args": [
    [
      {
        "raw": "hash-base@^2.0.0",
        "scope": null,
        "escapedName": "hash-base",
        "name": "hash-base",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init\\node_modules\\ripemd160"
    ]
  ],
  "_from": "hash-base@>=2.0.0 <3.0.0",
  "_id": "hash-base@2.0.2",
  "_inCache": true,
  "_location": "/hash-base",
  "_nodeVersion": "5.10.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/hash-base-2.0.2.tgz_1460889681740_0.6923118229024112"
  },
  "_npmUser": {
    "name": "fanatid",
    "email": "fanatid@ya.ru"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hash-base@^2.0.0",
    "scope": null,
    "escapedName": "hash-base",
    "name": "hash-base",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ripemd160"
  ],
  "_resolved": "https://registry.npmjs.org/hash-base/-/hash-base-2.0.2.tgz",
  "_shasum": "66ea1d856db4e8a5470cadf6fce23ae5244ef2e1",
  "_shrinkwrap": null,
  "_spec": "hash-base@^2.0.0",
  "_where": "S:\\SDK\\www\\Z\\zls.init\\node_modules\\ripemd160",
  "author": {
    "name": "Kirill Fomichev",
    "email": "fanatid@ya.ru",
    "url": "https://github.com/fanatid"
  },
  "bugs": {
    "url": "https://github.com/crypto-browserify/hash-base/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "description": "abstract base class for hash-streams",
  "devDependencies": {
    "nyc": "^6.1.1",
    "standard": "^6.0.8",
    "tape": "^4.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "66ea1d856db4e8a5470cadf6fce23ae5244ef2e1",
    "tarball": "https://registry.npmjs.org/hash-base/-/hash-base-2.0.2.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "dff2ded0a9e5d0e5e604dd785213fa991d1af4a5",
  "homepage": "https://github.com/crypto-browserify/hash-base",
  "keywords": [
    "hash",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    },
    {
      "name": "dcousens",
      "email": "email@dcousens.com"
    },
    {
      "name": "fanatid",
      "email": "fanatid@ya.ru"
    }
  ],
  "name": "hash-base",
  "optionalDependencies": {},
  "readme": "# hash-base\n\n[![NPM Package](https://img.shields.io/npm/v/hash-base.svg?style=flat-square)](https://www.npmjs.org/package/hash-base)\n[![Build Status](https://img.shields.io/travis/crypto-browserify/hash-base.svg?branch=master&style=flat-square)](https://travis-ci.org/crypto-browserify/hash-base)\n[![Dependency status](https://img.shields.io/david/crypto-browserify/hash-base.svg?style=flat-square)](https://david-dm.org/crypto-browserify/hash-base#info=dependencies)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nAbstract base class to inherit from if you want to create streams implementing the same API as node crypto [Hash][1] (for [Cipher][2] / [Decipher][3] check [crypto-browserify/cipher-base][4]).\n\n## Example\n\n```js\nfunction MyHash () {\n  HashBase.call(64) // in bytes\n}\n\ninherti(MyHash, HashBase)\n\nMyHash.prototype._update = function () {\n  // hashing one block with buffer this._block\n}\n\nMyHash.prototype._digest = function () {\n  // create padding and produce result\n}\n```\nYou also can check [source code](index.js) or [crypto-browserify/md5.js][5]\n\n## LICENSE\n\nMIT\n\n[1]: https://nodejs.org/api/crypto.html#crypto_class_hash\n[2]: https://nodejs.org/api/crypto.html#crypto_class_cipher\n[3]: https://nodejs.org/api/crypto.html#crypto_class_decipher\n[4]: https://github.com/crypto-browserify/cipher-base\n[5]: https://github.com/crypto-browserify/md5.js\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/crypto-browserify/hash-base.git"
  },
  "scripts": {
    "coverage": "nyc node test/*.js",
    "lint": "standard",
    "test": "npm run lint && npm run unit",
    "unit": "node test/*.js"
  },
  "version": "2.0.2"
}
