{
  "_args": [
    [
      {
        "raw": "css-loader@^0.26.4",
        "scope": null,
        "escapedName": "css-loader",
        "name": "css-loader",
        "rawSpec": "^0.26.4",
        "spec": ">=0.26.4 <0.27.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init"
    ]
  ],
  "_from": "css-loader@>=0.26.4 <0.27.0",
  "_id": "css-loader@0.26.4",
  "_inCache": true,
  "_location": "/css-loader",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/css-loader-0.26.4.tgz_1488981199943_0.17918122466653585"
  },
  "_npmUser": {
    "name": "d3viant0ne",
    "email": "wiens.joshua@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {
    "big.js": "3.1.3",
    "emojis-list": "2.1.0",
    "json5": "0.5.1"
  },
  "_requested": {
    "raw": "css-loader@^0.26.4",
    "scope": null,
    "escapedName": "css-loader",
    "name": "css-loader",
    "rawSpec": "^0.26.4",
    "spec": ">=0.26.4 <0.27.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/css-loader/-/css-loader-0.26.4.tgz",
  "_shasum": "b61e9e30db94303e6ffc892f10ecd09ad025a1fd",
  "_shrinkwrap": null,
  "_spec": "css-loader@^0.26.4",
  "_where": "S:\\SDK\\www\\Z\\zls.init",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/css-loader/issues"
  },
  "dependencies": {
    "babel-code-frame": "^6.11.0",
    "css-selector-tokenizer": "^0.7.0",
    "cssnano": ">=2.6.1 <4",
    "loader-utils": "^1.0.2",
    "lodash.camelcase": "^4.3.0",
    "object-assign": "^4.0.1",
    "postcss": "^5.0.6",
    "postcss-modules-extract-imports": "^1.0.0",
    "postcss-modules-local-by-default": "^1.0.1",
    "postcss-modules-scope": "^1.0.0",
    "postcss-modules-values": "^1.1.0",
    "source-list-map": "^0.1.7"
  },
  "description": "css loader module for webpack",
  "devDependencies": {
    "codecov": "^1.0.1",
    "eslint": "3.14.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "should": "^11.1.2"
  },
  "directories": {},
  "dist": {
    "shasum": "b61e9e30db94303e6ffc892f10ecd09ad025a1fd",
    "tarball": "https://registry.npmjs.org/css-loader/-/css-loader-0.26.4.tgz"
  },
  "engines": {
    "node": ">=0.12.0 || >=4.3.0 <5.0.0 || >=5.10"
  },
  "files": [
    "index.js",
    "locals.js",
    "lib"
  ],
  "gitHead": "7cb4cb75c4c850282ec79647dbdbf45a06897ce6",
  "homepage": "https://github.com/webpack/css-loader#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "ericclemmons",
      "email": "eric@smarterspam.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "markdalgleish",
      "email": "mark.john.dalgleish@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "spacek33z",
      "email": "kees@webduck.nl"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "css-loader",
  "optionalDependencies": {},
  "readme": "[![npm][npm]][npm-url]\r\n[![node][node]][node-url]\r\n[![deps][deps]][deps-url]\r\n[![tests][tests]][tests-url]\r\n[![coverage][cover]][cover-url]\r\n[![chat][chat]][chat-url]\r\n\r\n<div align=\"center\">\r\n  <img width=\"200\" height=\"200\"\r\n    src=\"https://cdn.worldvectorlogo.com/logos/css-3.svg\">\r\n  <a href=\"https://github.com/webpack/webpack\">\r\n    <img width=\"200\" height=\"200\"\r\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\r\n  </a>\r\n  <h1>CSS Loader</h1>\r\n</div>\r\n\r\n<h2 align=\"center\">Install</h2>\r\n\r\n```bash\r\nnpm install --save-dev css-loader\r\n```\r\n\r\n<h2 align=\"center\">Usage</h2>\r\n\r\nThe `css-loader` interprets `@import` and `url()` like `requires`.\r\n\r\nUse the loader either via your webpack config, CLI or inline.\r\n\r\n### Via webpack config (recommended)\r\n\r\n**webpack.config.js**\r\n```js\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ 'style-loader', 'css-loader' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n**In your application**\r\n```js\r\nimport css from 'file.css';\r\n```\r\n\r\n### CLI\r\n\r\n```bash\r\nwebpack --module-bind 'css=style-loader!css-loader'\r\n```\r\n\r\n**In your application**\r\n```js\r\nimport css from 'file.css';\r\n```\r\n\r\n### Inline\r\n\r\n**In your application**\r\n```js\r\nimport css from 'style-loader!css-loader!./file.css';\r\n```\r\n\r\n<h2 align=\"center\">Options</h2>\r\n\r\n`@import` and `url()` are interpreted like `import` and will be resolved by the css-loader.\r\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader)\r\nand the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see below).\r\n\r\nTo be compatible with existing css files (if not in CSS Module mode):\r\n\r\n* `url(image.png)` => `require('./image.png')`\r\n* `url(~module/image.png)` => `require('module/image.png')`\r\n\r\n<h2 align=\"center\">Options</h2>\r\n\r\n|Name|Default|Description|\r\n|:--:|:-----:|:----------|\r\n|**`root`**|`/`|Path to resolve URLs, URLs starting with `/` will not be translated|\r\n|**`modules`**|`false`|Enable/Disable CSS Modules|\r\n|**`import`** |`true`| Enable/Disable @import handling|\r\n|**`url`**|`true`| Enable/Disable `url()` handling|\r\n|**`minimize`**|`false`|Enable/Disable minification|\r\n|**`sourceMap`**|`false`|Enable/Disable Sourcemaps|\r\n|**`camelCase`**|`false`|Export Classnames in CamelCase|\r\n|**`importLoaders`**|`0`|Number of loaders applied before CSS loader|\r\n\r\nThe following webpack config can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as [Data URLs](https://tools.ietf.org/html/rfc2397) and copy larger files to the output directory.\r\n\r\n**webpack.config.js**\r\n```js\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ 'style-loader', 'css-loader' ]\r\n      },\r\n      {\r\n        test: /\\.(png|jpg|gif|svg|eot|ttf|woff|woff2)$/,\r\n        loader: 'url-loader',\r\n        options: {\r\n          limit: 10000\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n```\r\n\r\n### Root\r\n\r\nFor URLs that start with a `/`, the default behavior is to not translate them:\r\n\r\n* `url(/image.png)` => `url(/image.png)`\r\n\r\nIf a `root` query parameter is set, however, it will be prepended to the URL\r\nand then translated:\r\n\r\n**webpack.config.js**\r\n```js\r\nrules: [\r\n  {\r\n    test: /\\.css$/,\r\n    use: [\r\n      'style-loader',\r\n      {\r\n        loader: 'css-loader',\r\n        options: { root: '.' }\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\n* `url(/image.png)` => `require('./image.png')`\r\n\r\nUsing 'Root-relative' urls is not recommended. You should only use it for legacy CSS files.\r\n\r\n### CSS Scope\r\n\r\nBy default CSS exports all class names into a global selector scope. Styles can be locally scoped to avoid globally scoping styles.\r\n\r\nThe syntax `:local(.className)` can be used to declare `className` in the local scope. The local identifiers are exported by the module.\r\n\r\nWith `:local` (without brackets) local mode can be switched on for this selector. `:global(.className)` can be used to declare an explicit global selector. With `:global` (without brackets) global mode can be switched on for this selector.\r\n\r\nThe loader replaces local selectors with unique identifiers. The choosen unique identifiers are exported by the module.\r\n\r\n**app.css**\r\n```css\r\n:local(.className) { background: red; }\r\n:local .className { color: green; }\r\n:local(.className .subClass) { color: green; }\r\n:local .className .subClass :global(.global-class-name) { color: blue; }\r\n```\r\n\r\n**app.bundle.css**\r\n``` css\r\n._23_aKvs-b8bW2Vg3fwHozO { background: red; }\r\n._23_aKvs-b8bW2Vg3fwHozO { color: green; }\r\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 { color: green; }\r\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 .global-class-name { color: blue; }\r\n```\r\n\r\n> Note: Identifiers are exported\r\n\r\n``` js\r\nexports.locals = {\r\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\r\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1'\r\n}\r\n```\r\n\r\nCamelCase is recommended for local selectors. They are easier to use in the within the imported JS module.\r\n\r\n`url()` URLs in block scoped (`:local .abc`) rules behave like requests in modules:\r\n\r\n* `./file.png` instead of `file.png`\r\n* `module/file.png` instead of `~module/file.png`\r\n\r\nYou can use `:local(#someId)`, but this is not recommended. Use classes instead of ids.\r\n\r\nYou can configure the generated ident with the `localIdentName` query parameter (default `[hash:base64]`).\r\n\r\n **webpack.config.js**\r\n ```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        modules: true,\r\n        localIdentName: '[path][name]__[local]--[hash:base64:5]'\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nYou can also specify the absolute path to your custom `getLocalIdent` function to generate classname based on a different schema. Note that this requires `webpack >= v2.x.` since to be able to pass function in. For example:\r\n\r\n```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        modules: true,\r\n        localIdentName: '[path][name]__[local]--[hash:base64:5]',\r\n        getLocalIdent: (context, localIdentName, localName, options) => {\r\n          return 'whatever_random_class_name'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nNote: For prerendering with extract-text-webpack-plugin you should use `css-loader/locals` instead of `style-loader!css-loader` **in the prerendering bundle**. It doesn't embed CSS but only exports the identifier mappings.\r\n\r\n### [CSS Modules](https://github.com/css-modules/css-modules)\r\n\r\nThe query parameter `modules` enables the **CSS Modules** spec.\r\n\r\nThis enables local scoped CSS by default. (You can switch it off with `:global(...)` or `:global` for selectors and/or rules.)\r\n\r\n### CSS Composing\r\n\r\nWhen declaring a local class name you can compose a local class from another local class name.\r\n\r\n``` css\r\n:local(.className) {\r\n  background: red;\r\n  color: yellow;\r\n}\r\n\r\n:local(.subClass) {\r\n  composes: className;\r\n  background: blue;\r\n}\r\n```\r\n\r\nThis doesn't result in any change to the CSS itself but exports multiple class names:\r\n\r\n```js\r\nexports.locals = {\r\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\r\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1 _23_aKvs-b8bW2Vg3fwHozO'\r\n}\r\n```\r\n\r\n``` css\r\n._23_aKvs-b8bW2Vg3fwHozO {\r\n  background: red;\r\n  color: yellow;\r\n}\r\n\r\n._13LGdX8RMStbBE9w-t0gZ1 {\r\n  background: blue;\r\n}\r\n```\r\n\r\n### Importing CSS Locals\r\n\r\nTo import a local class name from another module:\r\n\r\n``` css\r\n:local(.continueButton) {\r\n  composes: button from 'library/button.css';\r\n  background: red;\r\n}\r\n```\r\n\r\n``` css\r\n:local(.nameEdit) {\r\n  composes: edit highlight from './edit.css';\r\n  background: red;\r\n}\r\n```\r\n\r\nTo import from multiple modules use multiple `composes:` rules.\r\n\r\n``` css\r\n:local(.className) {\r\n  composes: edit hightlight from './edit.css';\r\n  composes: button from 'module/button.css';\r\n  composes: classFromThisModule;\r\n  background: red;\r\n}\r\n```\r\n\r\n### SourceMaps\r\n\r\nTo include Sourcemaps set the `sourceMap` query param.\r\n\r\nI. e. the extract-text-webpack-plugin can handle them.\r\n\r\nThey are not enabled by default because they expose a runtime overhead and increase in bundle size (JS SourceMap do not). In addition to that relative paths are buggy and you need to use an absolute public path which include the server URL.\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        sourceMap: true\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### ImportLoaders\r\n\r\nThe query parameter `importLoaders` allow to configure which loaders should be applied to `@import`ed resources.\r\n\r\n`importLoaders`: That many loaders after the css-loader are used to import resources.\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        importLoaders: 1\r\n      }\r\n    },\r\n    'postcss-loader'\r\n  ]\r\n}\r\n```\r\n\r\nThis may change in the future, when the module system (i. e. webpack) supports loader matching by origin.\r\n\r\n### Minification\r\n\r\nBy default the css-loader minimizes the css if specified by the module system.\r\n\r\nIn some cases the minification is destructive to the css, so you can provide some options to it. cssnano is used for minification and you find a [list of options here](http://cssnano.co/options/).\r\n\r\nYou can also disable or enforce minification with the `minimize` query parameter.\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        minimize: true || {/* CSSNano Options */}\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### CamelCase\r\n\r\nBy default, the exported JSON keys mirror the class names. If you want to camelize class names (useful in JS), pass the query parameter `camelCase` to css-loader.\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  test: /\\.css$/,\r\n  use: [\r\n    {\r\n      loader: 'css-loader',\r\n      options: {\r\n        camelCase: true\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n```css\r\n.class-name {}\r\n```\r\n\r\n```js\r\nimport { className } from 'file.css';\r\n```\r\n\r\n<h2 align=\"center\">Maintainers</h2>\r\n\r\n<table>\r\n  <tbody>\r\n    <tr>\r\n      <td align=\"center\">\r\n        <img width=\"150\" height=\"150\"\r\n        src=\"https://avatars3.githubusercontent.com/u/166921?v=3&s=150\">\r\n        </br>\r\n        <a href=\"https://github.com/bebraw\">Juho Vepsäläinen</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <img width=\"150\" height=\"150\"\r\n        src=\"https://avatars2.githubusercontent.com/u/8420490?v=3&s=150\">\r\n        </br>\r\n        <a href=\"https://github.com/d3viant0ne\">Joshua Wiens</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <img width=\"150\" height=\"150\"\r\n        src=\"https://avatars3.githubusercontent.com/u/533616?v=3&s=150\">\r\n        </br>\r\n        <a href=\"https://github.com/SpaceK33z\">Kees Kluskens</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <img width=\"150\" height=\"150\"\r\n        src=\"https://avatars3.githubusercontent.com/u/3408176?v=3&s=150\">\r\n        </br>\r\n        <a href=\"https://github.com/TheLarkInn\">Sean Larkin</a>\r\n      </td>\r\n    </tr>\r\n  <tbody>\r\n</table>\r\n\r\n\r\n[npm]: https://img.shields.io/npm/v/css-loader.svg\r\n[npm-url]: https://npmjs.com/package/css-loader\r\n\r\n[node]: https://img.shields.io/node/v/css-loader.svg\r\n[node-url]: https://nodejs.org\r\n\r\n[deps]: https://david-dm.org/webpack/css-loader.svg\r\n[deps-url]: https://david-dm.org/webpack/css-loader\r\n\r\n[tests]: http://img.shields.io/travis/webpack/css-loader.svg\r\n[tests-url]: https://travis-ci.org/webpack/css-loader\r\n\r\n[cover]: https://coveralls.io/repos/github/webpack/css-loader/badge.svg\r\n[cover-url]: https://coveralls.io/github/webpack/css-loader\r\n\r\n[chat]: https://badges.gitter.im/webpack/webpack.svg\r\n[chat-url]: https://gitter.im/webpack/webpack\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/webpack/css-loader.git"
  },
  "scripts": {
    "cover": "istanbul cover node_modules/mocha/bin/_mocha",
    "lint": "eslint lib test",
    "publish-patch": "mocha && npm version patch && git push && git push --tags && npm publish",
    "test": "mocha",
    "test:cover": "npm run cover -- --report lcovonly",
    "travis:lint": "npm run lint",
    "travis:test": "npm run cover"
  },
  "version": "0.26.4"
}
