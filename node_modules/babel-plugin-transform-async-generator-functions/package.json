{
  "_args": [
    [
      {
        "raw": "babel-plugin-transform-async-generator-functions@^6.24.1",
        "scope": null,
        "escapedName": "babel-plugin-transform-async-generator-functions",
        "name": "babel-plugin-transform-async-generator-functions",
        "rawSpec": "^6.24.1",
        "spec": ">=6.24.1 <7.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init\\node_modules\\babel-preset-stage-3"
    ]
  ],
  "_from": "babel-plugin-transform-async-generator-functions@>=6.24.1 <7.0.0",
  "_id": "babel-plugin-transform-async-generator-functions@6.24.1",
  "_inCache": true,
  "_location": "/babel-plugin-transform-async-generator-functions",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/babel-plugin-transform-async-generator-functions-6.24.1.tgz_1491578375719_0.672300395090133"
  },
  "_npmUser": {
    "name": "hzoo",
    "email": "hi@henryzoo.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-transform-async-generator-functions@^6.24.1",
    "scope": null,
    "escapedName": "babel-plugin-transform-async-generator-functions",
    "name": "babel-plugin-transform-async-generator-functions",
    "rawSpec": "^6.24.1",
    "spec": ">=6.24.1 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/babel-preset-stage-3"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-transform-async-generator-functions/-/babel-plugin-transform-async-generator-functions-6.24.1.tgz",
  "_shasum": "f058900145fd3e9907a6ddf28da59f215258a5db",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-transform-async-generator-functions@^6.24.1",
  "_where": "S:\\SDK\\www\\Z\\zls.init\\node_modules\\babel-preset-stage-3",
  "dependencies": {
    "babel-helper-remap-async-to-generator": "^6.24.1",
    "babel-plugin-syntax-async-generators": "^6.5.0",
    "babel-runtime": "^6.22.0"
  },
  "description": "Turn async generator functions into ES2015 generators",
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.24.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f058900145fd3e9907a6ddf28da59f215258a5db",
    "tarball": "https://registry.npmjs.org/babel-plugin-transform-async-generator-functions/-/babel-plugin-transform-async-generator-functions-6.24.1.tgz"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    }
  ],
  "name": "babel-plugin-transform-async-generator-functions",
  "optionalDependencies": {},
  "readme": "# babel-plugin-transform-async-generator-functions\n\n> Turn async generator functions and for-await statements to ES2015 generators\n\n## Example\n\n**In**\n\n```javascript\nasync function* agf() {\n  await 1;\n  yield 2;\n}\n```\n\n**Out**\n\n```javascript\nvar _asyncGenerator = ...\n\nlet agf = (() => {\n  var _ref = _asyncGenerator.wrap(function* () {\n    yield _asyncGenerator.await(1);\n    yield 2;\n  });\n\n  return function agf() {\n    return _ref.apply(this, arguments);\n  };\n})();\n```\n\nFor await example\n\n```js\nasync function f() {\n  for await (let x of y) {\n    g(x);\n  }\n}\n```\n\n**Example Usage**\n\n```js\nasync function* genAnswers() {\n  var stream = [ Promise.resolve(4), Promise.resolve(9), Promise.resolve(12) ];\n  var total = 0;\n  for await (let val of stream) {\n    total += await val;\n    yield total;\n  }\n}\n\nfunction forEach(ai, fn) {\n  return ai.next().then(function (r) {\n    if (!r.done) {\n      fn(r);\n      return forEach(ai, fn);\n    }\n  });\n}\n\nvar output = 0;\nforEach(genAnswers(), function(val) { output += val.value })\n.then(function () {\n  console.log(output); // 42\n});\n```\n\n[Try it Out in the REPL](https://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=stage-3&code=async%20function*%20genAnswers()%20%7B%0A%20%20var%20stream%20%3D%20%5B%20Promise.resolve(4)%2C%20Promise.resolve(9)%2C%20Promise.resolve(12)%20%5D%3B%0A%20%20var%20total%20%3D%200%3B%0A%20%20for%20await%20(let%20val%20of%20stream)%20%7B%0A%20%20%20%20total%20%2B%3D%20await%20val%3B%0A%20%20%20%20yield%20total%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20forEach(ai%2C%20fn)%20%7B%0A%20%20return%20ai.next().then(function%20(r)%20%7B%0A%20%20%20%20if%20(!r.done)%20%7B%0A%20%20%20%20%20%20fn(r)%3B%0A%20%20%20%20%20%20return%20forEach(ai%2C%20fn)%3B%0A%20%20%20%20%7D%0A%20%20%7D)%3B%0A%7D%0A%0Avar%20output%20%3D%200%3B%0AforEach(genAnswers()%2C%20function(val)%20%7B%20output%20%2B%3D%20val.value%20%7D)%0A.then(function%20()%20%7B%0A%20%20console.log(output)%3B%20%2F%2F%2042%0A%7D)%3B&experimental=true&loose=false&spec=false&playground=true&stage=0)\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-async-generator-functions\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-async-generator-functions\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-async-generator-functions script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-async-generator-functions\"]\n});\n```\n\n## References\n\n* [Proposal: Asynchronous iteration for ECMAScript](https://github.com/tc39/proposal-async-iteration)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-async-generator-functions"
  },
  "scripts": {},
  "version": "6.24.1"
}
