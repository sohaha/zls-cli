{
  "_args": [
    [
      {
        "raw": "eslint-plugin-react@^6.9.0",
        "scope": null,
        "escapedName": "eslint-plugin-react",
        "name": "eslint-plugin-react",
        "rawSpec": "^6.9.0",
        "spec": ">=6.9.0 <7.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init\\node_modules\\eslint-plugin-vue"
    ]
  ],
  "_from": "eslint-plugin-react@>=6.9.0 <7.0.0",
  "_id": "eslint-plugin-react@6.10.3",
  "_inCache": true,
  "_location": "/eslint-plugin-react",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/eslint-plugin-react-6.10.3.tgz_1490046751641_0.086401920998469"
  },
  "_npmUser": {
    "name": "yannickcr",
    "email": "yannick.croissant+npm@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {
    "esutils": "2.0.2",
    "isarray": "1.0.0"
  },
  "_requested": {
    "raw": "eslint-plugin-react@^6.9.0",
    "scope": null,
    "escapedName": "eslint-plugin-react",
    "name": "eslint-plugin-react",
    "rawSpec": "^6.9.0",
    "spec": ">=6.9.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-plugin-vue"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-6.10.3.tgz",
  "_shasum": "c5435beb06774e12c7db2f6abaddcbf900cd3f78",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-react@^6.9.0",
  "_where": "S:\\SDK\\www\\Z\\zls.init\\node_modules\\eslint-plugin-vue",
  "author": {
    "name": "Yannick Croissant",
    "email": "yannick.croissant+npm@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yannickcr/eslint-plugin-react/issues"
  },
  "dependencies": {
    "array.prototype.find": "^2.0.1",
    "doctrine": "^1.2.2",
    "has": "^1.0.1",
    "jsx-ast-utils": "^1.3.4",
    "object.assign": "^4.0.4"
  },
  "description": "React specific linting rules for ESLint",
  "devDependencies": {
    "babel-eslint": "7.1.1",
    "coveralls": "2.11.15",
    "eslint": "^2.0.0 || ^3.0.0",
    "istanbul": "0.4.5",
    "mocha": "3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c5435beb06774e12c7db2f6abaddcbf900cd3f78",
    "tarball": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-6.10.3.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "LICENSE",
    "README.md",
    "index.js",
    "lib"
  ],
  "gitHead": "b9cfdd6fccedd8c3ad1d2db334574bba38a1aaf8",
  "homepage": "https://github.com/yannickcr/eslint-plugin-react",
  "keywords": [
    "eslint",
    "eslint-plugin",
    "eslintplugin",
    "react"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "yannickcr",
      "email": "yannick.croissant+npm@gmail.com"
    }
  ],
  "name": "eslint-plugin-react",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": "^2.0.0 || ^3.0.0"
  },
  "readme": "ESLint-plugin-React\n===================\n\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Build Status][appveyor-image]][appveyor-url] [![Dependency Status][deps-image]][deps-url] [![Coverage Status][coverage-image]][coverage-url] [![Code Climate][climate-image]][climate-url]\n\nReact specific linting rules for ESLint\n\n# Installation\n\nInstall [ESLint](https://www.github.com/eslint/eslint) either locally or globally.\n\n```sh\n$ npm install eslint --save-dev\n```\n\nIf you installed `ESLint` globally, you have to install React plugin globally too. Otherwise, install it locally.\n\n```sh\n$ npm install eslint-plugin-react --save-dev\n```\n\n# Configuration\n\nAdd `plugins` section and specify ESLint-plugin-React as a plugin.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nYou can also specify some settings that will be shared across all the plugin rules.\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createClass\", // Regex for Component Factory to use, default to \"createClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"version\": \"15.0\" // React version, default to the latest React stable release\n    }\n  }\n}\n```\n\nIf it is not already the case you must also configure `ESLint` to support JSX.\n\nWith ESLint 1.x.x:\n\n```json\n{\n  \"ecmaFeatures\": {\n    \"jsx\": true\n  }\n}\n```\n\nWith ESLint 2.x.x or 3.x.x:\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nFinally, enable all of the rules that you would like to use.  Use [our preset](#recommended) to get reasonable defaults quickly, and/or choose your own:\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n# List of supported rules\n\n* [react/display-name](docs/rules/display-name.md): Prevent missing `displayName` in a React component definition\n* [react/forbid-component-props](docs/rules/forbid-component-props.md): Forbid certain props on Components\n* [react/forbid-elements](docs/rules/forbid-elements.md): Forbid certain elements\n* [react/forbid-prop-types](docs/rules/forbid-prop-types.md): Forbid certain propTypes\n* [react/forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md): Forbid foreign propTypes\n* [react/no-array-index-key](docs/rules/no-array-index-key.md): Prevent using Array index in `key` props\n* [react/no-children-prop](docs/rules/no-children-prop.md): Prevent passing children as props\n* [react/no-danger](docs/rules/no-danger.md): Prevent usage of dangerous JSX properties\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md): Prevent problem with children and props.dangerouslySetInnerHTML\n* [react/no-deprecated](docs/rules/no-deprecated.md): Prevent usage of deprecated methods\n* [react/no-did-mount-set-state](docs/rules/no-did-mount-set-state.md): Prevent usage of `setState` in `componentDidMount`\n* [react/no-did-update-set-state](docs/rules/no-did-update-set-state.md): Prevent usage of `setState` in `componentDidUpdate`\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md): Prevent direct mutation of `this.state`\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md): Prevent usage of `findDOMNode`\n* [react/no-is-mounted](docs/rules/no-is-mounted.md): Prevent usage of `isMounted`\n* [react/no-multi-comp](docs/rules/no-multi-comp.md): Prevent multiple component definition per file\n* [react/no-render-return-value](docs/rules/no-render-return-value.md): Prevent usage of the return value of `React.render`\n* [react/no-set-state](docs/rules/no-set-state.md): Prevent usage of `setState`\n* [react/no-string-refs](docs/rules/no-string-refs.md): Prevent using string references in `ref` attribute.\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md): Prevent invalid characters from appearing in markup\n* [react/no-unknown-property](docs/rules/no-unknown-property.md): Prevent usage of unknown DOM property (fixable)\n* [react/no-unused-prop-types](docs/rules/no-unused-prop-types.md): Prevent definitions of unused prop types\n* [react/prefer-es6-class](docs/rules/prefer-es6-class.md): Enforce ES5 or ES6 class for React Components\n* [react/prefer-stateless-function](docs/rules/prefer-stateless-function.md): Enforce stateless React Components to be written as a pure function\n* [react/prop-types](docs/rules/prop-types.md): Prevent missing props validation in a React component definition\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md): Prevent missing `React` when using JSX\n* [react/require-default-props](docs/rules/require-default-props.md): Enforce a defaultProps definition for every prop that is not a required prop\n* [react/require-optimization](docs/rules/require-optimization.md): Enforce React components to have a shouldComponentUpdate method\n* [react/require-render-return](docs/rules/require-render-return.md): Enforce ES5 or ES6 class for returning value in render function\n* [react/self-closing-comp](docs/rules/self-closing-comp.md): Prevent extra closing tags for components without children (fixable)\n* [react/sort-comp](docs/rules/sort-comp.md): Enforce component methods order\n* [react/sort-prop-types](docs/rules/sort-prop-types.md): Enforce propTypes declarations alphabetical sorting\n* [react/style-prop-object](docs/rules/style-prop-object.md): Enforce style prop value being an object\n* [react/void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md): Prevent void DOM elements (e.g. `<img />`, `<br />`) from receiving children\n\n## JSX-specific rules\n\n* [react/jsx-boolean-value](docs/rules/jsx-boolean-value.md): Enforce boolean attributes notation in JSX (fixable)\n* [react/jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md): Validate closing bracket location in JSX (fixable)\n* [react/jsx-curly-spacing](docs/rules/jsx-curly-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes (fixable)\n* [react/jsx-equals-spacing](docs/rules/jsx-equals-spacing.md): Enforce or disallow spaces around equal signs in JSX attributes (fixable)\n* [react/jsx-filename-extension](docs/rules/jsx-filename-extension.md): Restrict file extensions that may contain JSX\n* [react/jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md): Enforce position of the first prop in JSX (fixable)\n* [react/jsx-handler-names](docs/rules/jsx-handler-names.md): Enforce event handler naming conventions in JSX\n* [react/jsx-indent](docs/rules/jsx-indent.md): Validate JSX indentation (fixable)\n* [react/jsx-indent-props](docs/rules/jsx-indent-props.md): Validate props indentation in JSX (fixable)\n* [react/jsx-key](docs/rules/jsx-key.md): Validate JSX has key prop when in array or iterator\n* [react/jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md): Limit maximum of props on a single line in JSX\n* [react/jsx-no-bind](docs/rules/jsx-no-bind.md): Prevent usage of `.bind()` and arrow functions in JSX props\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md): Prevent comments from being inserted as text nodes\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md): Prevent duplicate props in JSX\n* [react/jsx-no-literals](docs/rules/jsx-no-literals.md): Prevent usage of unwrapped JSX strings\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md): Prevent usage of unsafe `target='_blank'`\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md): Disallow undeclared variables in JSX\n* [react/jsx-pascal-case](docs/rules/jsx-pascal-case.md): Enforce PascalCase for user-defined JSX components\n* [react/jsx-sort-props](docs/rules/jsx-sort-props.md): Enforce props alphabetical sorting\n* [react/jsx-space-before-closing](docs/rules/jsx-space-before-closing.md): Validate spacing before closing bracket in JSX (fixable)\n* [react/jsx-tag-spacing](docs/rules/jsx-tag-spacing.md): Validate whitespace in and around the JSX opening and closing brackets (fixable)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md): Prevent React to be incorrectly marked as unused\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md): Prevent variables used in JSX to be incorrectly marked as unused\n* [react/jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md): Prevent missing parentheses around multilines JSX (fixable)\n\n## Other useful plugins\n\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n# Shareable configurations\n\n## Recommended\n\nThis plugin exports a `recommended` configuration that enforce React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\nThe rules enabled in this configuration are:\n\n* [react/display-name](docs/rules/display-name.md)\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md)\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md)\n* [react/no-deprecated](docs/rules/no-deprecated.md)\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md)\n* [react/no-is-mounted](docs/rules/no-is-mounted.md)\n* [react/no-unknown-property](docs/rules/no-unknown-property.md)\n* [react/no-render-return-value](docs/rules/no-render-return-value.md)\n* [react/prop-types](docs/rules/prop-types.md)\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)\n* [react/require-render-return](docs/rules/require-render-return.md)\n\n## All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options).\n\n# License\n\nESLint-plugin-React is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[travis-url]: https://travis-ci.org/yannickcr/eslint-plugin-react\n[travis-image]: https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSItMTQyLjUgLTE0Mi41IDI4NSAyODUiPjxjaXJjbGUgcj0iMTQxLjciIGZpbGw9IiNERDQ4MTQiLz48ZyBpZD0iYSIgZmlsbD0iI0ZGRiI%2BPGNpcmNsZSBjeD0iLTk2LjQiIHI9IjE4LjkiLz48cGF0aCBkPSJNLTQ1LjYgNjguNGMtMTYuNi0xMS0yOS0yOC0zNC00Ny44IDYtNSA5LjgtMTIuMyA5LjgtMjAuNnMtMy44LTE1LjctOS44LTIwLjZjNS0xOS44IDE3LjQtMzYuNyAzNC00Ny44bDEzLjggMjMuMkMtNDYtMzUuMi01NS4zLTE4LjctNTUuMyAwYzAgMTguNyA5LjMgMzUuMiAyMy41IDQ1LjJ6Ii8%2BPC9nPjx1c2UgeGxpbms6aHJlZj0iI2EiIHRyYW5zZm9ybT0icm90YXRlKDEyMCkiLz48dXNlIHhsaW5rOmhyZWY9IiNhIiB0cmFuc2Zvcm09InJvdGF0ZSgyNDApIi8%2BPC9zdmc%2B\n\n[appveyor-url]: https://ci.appveyor.com/project/yannickcr/eslint-plugin-react\n[appveyor-image]: https://img.shields.io/appveyor/ci/yannickcr/eslint-plugin-react/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgd2lkdGg9IjEyOCIgaGVpZ2h0PSIxMjgiIHZpZXdCb3g9IjAgMCAxMjggMTI4Ij48ZyBmaWxsPSIjMUJBMUUyIiB0cmFuc2Zvcm09InNjYWxlKDgpIj48cGF0aCBkPSJNMCAyLjI2NWw2LjUzOS0uODg4LjAwMyA2LjI4OC02LjUzNi4wMzd6Ii8%2BPHBhdGggZD0iTTYuNTM2IDguMzlsLjAwNSA2LjI5My02LjUzNi0uODk2di01LjQ0eiIvPjxwYXRoIGQ9Ik03LjMyOCAxLjI2MWw4LjY3LTEuMjYxdjcuNTg1bC04LjY3LjA2OXoiLz48cGF0aCBkPSJNMTYgOC40NDlsLS4wMDIgNy41NTEtOC42Ny0xLjIyLS4wMTItNi4zNDV6Ii8%2BPC9nPjwvc3ZnPg==\n\n[deps-url]: https://david-dm.org/yannickcr/eslint-plugin-react\n[deps-image]: https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg\n\n[coverage-url]: https://coveralls.io/r/yannickcr/eslint-plugin-react?branch=master\n[coverage-image]: https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg\n\n[climate-url]: https://codeclimate.com/github/yannickcr/eslint-plugin-react\n[climate-image]: https://img.shields.io/codeclimate/github/yannickcr/eslint-plugin-react.svg\n\n[status-url]: https://github.com/yannickcr/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/badge/status-maintained-brightgreen.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yannickcr/eslint-plugin-react.git"
  },
  "scripts": {
    "coveralls": "cat ./reports/coverage/lcov.info | coveralls",
    "lint": "eslint ./",
    "test": "npm run lint && npm run unit-test",
    "unit-test": "istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --reporter dot --opts tests/mocha.opts"
  },
  "version": "6.10.3"
}
