{
  "_args": [
    [
      {
        "raw": "less-loader@^2.2.3",
        "scope": null,
        "escapedName": "less-loader",
        "name": "less-loader",
        "rawSpec": "^2.2.3",
        "spec": ">=2.2.3 <3.0.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init"
    ]
  ],
  "_from": "less-loader@>=2.2.3 <3.0.0",
  "_id": "less-loader@2.2.3",
  "_inCache": true,
  "_location": "/less-loader",
  "_nodeVersion": "5.9.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/less-loader-2.2.3.tgz_1458935338853_0.0017933058552443981"
  },
  "_npmUser": {
    "name": "jhnns",
    "email": "mail@johannesewald.de"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "less-loader@^2.2.3",
    "scope": null,
    "escapedName": "less-loader",
    "name": "less-loader",
    "rawSpec": "^2.2.3",
    "spec": ">=2.2.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/less-loader/-/less-loader-2.2.3.tgz",
  "_shasum": "b6d8f8139c8493df09d992a93a00734b08f84528",
  "_shrinkwrap": null,
  "_spec": "less-loader@^2.2.3",
  "_where": "S:\\SDK\\www\\Z\\zls.init",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/less-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^0.2.5"
  },
  "description": "less loader module for webpack",
  "devDependencies": {
    "css-loader": "^0.23.1",
    "enhanced-require": "^0.5.0-beta6",
    "extract-text-webpack-plugin": "^1.0.1",
    "less": "^2.6.1",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "should": "^8.3.0",
    "webpack": "^1.12.14"
  },
  "directories": {},
  "dist": {
    "shasum": "b6d8f8139c8493df09d992a93a00734b08f84528",
    "tarball": "https://registry.npmjs.org/less-loader/-/less-loader-2.2.3.tgz"
  },
  "gitHead": "7f0fd0fb7baabebbeaadb9507896bdc0438030b5",
  "homepage": "https://github.com/webpack/less-loader#readme",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    }
  ],
  "name": "less-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "less": "^2.3.1"
  },
  "readme": "# less loader for webpack\n\n## Installation\n\n`npm install less-loader --save-dev`\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar css = require(\"!raw!less!./file.less\");\n// => returns compiled css code from file.less, resolves imports\nvar css = require(\"!css!less!./file.less\");\n// => returns compiled css code from file.less, resolves imports and url(...)s\n```\n\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) to add the css rules to your document:\n\n``` javascript\nrequire(\"!style!css!less!./file.less\");\n```\n\n### webpack config\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.less$/,\n        loader: \"style!css!less\"\n      }\n    ]\n  }\n};\n```\n\nThen you only need to write: `require(\"./file.less\")`\n\n### LESS options\n\nYou can pass any LESS specific configuration options through to the render function via [query parameters](http://webpack.github.io/docs/using-loaders.html#query-parameters).\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.less$/,\n        loader: \"style!css!less?strictMath&noIeCompat\"\n      }\n    ]\n  }\n};\n```\n\nSee the [LESS documentation](http://lesscss.org/usage/#command-line-usage-options) for all available options. LESS translates dash-case to camelCase. Certain options which take values (e.g. `lessc --modify-var=\"a=b\"`) are better handled with the [JSON loader syntax](http://webpack.github.io/docs/using-loaders.html#query-parameters) (`style!css!less?{\"modifyVars\":{\"a\":\"b\"}}`).  \n\n### LESS plugins\n\nIn order to use [plugins](http://lesscss.org/usage/#plugins), simply set\nthe `lessLoader.lessPlugins`-option on your webpack options. You can also change the options' key with a query parameter: `\"less?config=lessLoaderCustom\"`.\n\n``` javascript\nvar LessPluginCleanCSS = require('less-plugin-clean-css');\n\nmodule.exports = {\n  ...\n  lessLoader: {\n    lessPlugins: [\n      new LessPluginCleanCSS({advanced: true})\n    ]\n  }\n};\n```\n\n## Imports\n\nwebpack provides an [advanced mechanism to resolve files](http://webpack.github.io/docs/resolving.html). The less-loader stubs less' `fileLoader` and passes all queries to the webpack resolving engine. Thus you can import your less-modules from `node_modules`. Just prepend them with a `~` which tells webpack to look-up the [`modulesDirectories`](http://webpack.github.io/docs/configuration.html#resolve-modulesdirectories)\n\n```css\n@import \"~bootstrap/less/bootstrap\";\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home-directory. webpack needs to distinguish between `bootstrap` and `~bootstrap` because css- and less-files have no special syntax for importing relative files. Writing `@import \"file\"` is the same as `@import \"./file\";`\n\n## Source maps\n\nBecause of browser limitations, source maps are only available in conjunction with the [extract-text-webpack-plugin](https://github.com/webpack/extract-text-webpack-plugin). Use that plugin to extract the CSS code from the generated JS bundle into a separate file (which even improves the perceived performance because JS and CSS are loaded in parallel).\n\nThen your `webpack.config.js` should look like this:\n\n```javascript\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    ...\n    // must be 'source-map' or 'inline-source-map'\n    devtool: 'source-map',\n    module: {\n        loaders: [\n            {\n                test: /\\.less$/,\n                loader: ExtractTextPlugin.extract(\n                    // activate source maps via loader query\n                    'css?sourceMap!' +\n                    'less?sourceMap'\n                )\n            }\n        ]\n    },\n    plugins: [\n        // extract inline css into separate 'styles.css'\n        new ExtractTextPlugin('styles.css')\n    ]\n};\n```\n\nIf you want to view the original LESS files inside Chrome and even edit it,  [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/webpack/less-loader/tree/master/test) for a running example. Make sure to serve the content with an HTTP server.\n\n## Contribution\n\nDon't hesitate to create a pull request. Every contribution is appreciated. In development you can start the tests by calling `npm test`.\n\nThe tests are basically just comparing the generated css with a reference css-file located under `test/css`. You can easily generate a reference css-file by calling `node test/helpers/generateCss.js <less-file-without-less-extension>`. It passes the less-file to less and writes the output to the `test/css`-folder.\n\n[![build status](https://travis-ci.org/webpack/less-loader.svg)](https://travis-ci.org/webpack/less-loader)\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/webpack/less-loader.git"
  },
  "scripts": {
    "test": "node --no-deprecation node_modules/.bin/_mocha -R spec",
    "test-source-map": "webpack --config test/sourceMap/webpack.config.js && open ./test/sourceMap/index.html"
  },
  "version": "2.2.3"
}
