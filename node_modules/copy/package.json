{
  "_args": [
    [
      {
        "raw": "copy@^0.3.0",
        "scope": null,
        "escapedName": "copy",
        "name": "copy",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "S:\\SDK\\www\\Z\\zls.init"
    ]
  ],
  "_from": "copy@>=0.3.0 <0.4.0",
  "_id": "copy@0.3.0",
  "_inCache": true,
  "_location": "/copy",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/copy-0.3.0.tgz_1469572307608_0.7782166043762118"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "copy@^0.3.0",
    "scope": null,
    "escapedName": "copy",
    "name": "copy",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/copy/-/copy-0.3.0.tgz",
  "_shasum": "0d5fda5e063d2dedf992b78ac060a0820caeeff3",
  "_shrinkwrap": null,
  "_spec": "copy@^0.3.0",
  "_where": "S:\\SDK\\www\\Z\\zls.init",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bin": {
    "copy": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/copy/issues"
  },
  "dependencies": {
    "async-each": "^1.0.0",
    "bluebird": "^3.4.1",
    "extend-shallow": "^2.0.1",
    "file-contents": "^0.3.1",
    "glob-parent": "^2.0.0",
    "graceful-fs": "^4.1.4",
    "has-glob": "^0.1.1",
    "is-absolute": "^0.2.5",
    "lazy-cache": "^2.0.1",
    "log-ok": "^0.1.1",
    "matched": "^0.4.1",
    "mkdirp": "^0.5.1",
    "resolve-dir": "^0.1.0",
    "to-file": "^0.2.0"
  },
  "description": "Copy files or directories using globs.",
  "devDependencies": {
    "assert-fs": "^0.1.0",
    "assert-path": "^0.1.0",
    "delete": "^0.3.2",
    "gulp": "^3.9.1",
    "gulp-format-md": "^0.1.9",
    "gulp-unused": "^0.1.2",
    "is-buffer": "^1.1.3",
    "look-up": "^0.8.3",
    "minimist": "^1.2.0",
    "mocha": "^2.5.3"
  },
  "directories": {},
  "dist": {
    "shasum": "0d5fda5e063d2dedf992b78ac060a0820caeeff3",
    "tarball": "https://registry.npmjs.org/copy/-/copy-0.3.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "bin",
    "index.js",
    "lib"
  ],
  "gitHead": "291a8d248f5ba970686d076165d4e7386aa0f0d7",
  "homepage": "https://github.com/jonschlinkert/copy",
  "keywords": [
    "async",
    "copy",
    "file",
    "file-system",
    "fs",
    "glob",
    "move",
    "path",
    "pattern",
    "promise",
    "stream",
    "sync",
    "system"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "doowb",
      "email": "brian.woodward@gmail.com"
    },
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "copy",
  "optionalDependencies": {},
  "readme": "# copy [![NPM version](https://img.shields.io/npm/v/copy.svg?style=flat)](https://www.npmjs.com/package/copy) [![NPM downloads](https://img.shields.io/npm/dm/copy.svg?style=flat)](https://npmjs.org/package/copy) [![Build Status](https://img.shields.io/travis/jonschlinkert/copy.svg?style=flat)](https://travis-ci.org/jonschlinkert/copy)\n\nCopy files or directories using globs.\n\n## TOC\n\n- [Install](#install)\n- [Usage](#usage)\n- [Examples](#examples)\n- [API](#api)\n- [CLI](#cli)\n- [History](#history)\n- [Related projects](#related-projects)\n- [Contributing](#contributing)\n- [Building docs](#building-docs)\n- [Running tests](#running-tests)\n- [Author](#author)\n- [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save copy\n```\n\n## Usage\n\n```js\nvar copy = require('copy');\n```\n\nSee the [API documentation](#api) for usage details and available methods.\n\n## Examples\n\nThe main export is a function that takes:\n\n* `src` - glob pattern or file path(s)\n* `dest` - the destination directory\n* `cb` - callback function\n\n```js\ncopy('*.js', 'foo', function(err, files) {\n  if (err) throw err;\n  // `files` is an array of the files that were copied\n});\n```\n\n**Usage with [gulp](http://gulpjs.com)**\n\nIn your project's gulpfile.js:\n\n```js\nvar gulp = require('gulp');\nvar copy = require('copy');\n\ngulp.task('default', function (cb) {\n  copy('fixtures/*.txt', 'actual', cb);\n});\n```\n\n## API\n\n### [copy](index.js#L27)\n\nCopy a filepath, vinyl file, array of files, or glob of files to the given destination `directory`, with `options` and callback function that exposes `err` and the array of vinyl files that are created by the copy operation.\n\n**Params**\n\n* `patterns` **{String|Object|Array}**: Filepath(s), vinyl file(s) or glob of files.\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy('*.js', 'dist', function(err, file) {\n  // exposes the vinyl `file` created when the file is copied\n});\n```\n\n### [.copy.each](index.js#L79)\n\nCopy an array of files to the given destination `directory`, with `options` and callback function that exposes `err` and the array of vinyl files that are created by the copy operation.\n\n**Params**\n\n* `files` **{Array}**: Filepaths or vinyl files.\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy.each(['foo.txt', 'bar.txt', 'baz.txt'], 'dist', function(err, files) {\n  // exposes the vinyl `files` created when the files are copied\n});\n```\n\n### [.copy.one](index.js#L122)\n\nCopy a single `file` to the given `dest` directory, using the specified options and callback function.\n\n**Params**\n\n* `file` **{String|Object}**: Filepath or vinyl file\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy.one('foo.txt', 'dist', function(err, file) {\n  if (err) throw err;\n  // exposes the vinyl `file` that is created when the file is copied\n});\n```\n\n## CLI\n\nTo use the CLI, install `copy` globally with the following command:\n\n```js\n$ npm install --global copy\n```\n\nThis adds `copy` to your system path, allowing the `copy` command to be executed anywhere.\n\n**CLI usage**\n\n```sh\n$ copy <patterns> <dir>\n```\n\n* `patterns`: glob pattern or array of file paths\n* `dir`: destination directory\n\n**Example**\n\nCopy* all files with the `.js` extension to the `foo` directory\n\n```sh\n$ copy *.js foo\n```\n\n*Note that glob patterns may need to be wrapped in quotes depending on the shell you're using.\n\n## History\n\n**v0.2.0 - breaking changes**\n\n* The API was changed in 0.2.0. please review the [API documentation](#api)\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [expand-config](https://www.npmjs.com/package/expand-config): Expand tasks, targets and files in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-config \"Expand tasks, targets and files in a declarative configuration.\")\n* [expand-files](https://www.npmjs.com/package/expand-files): Expand glob patterns in a declarative configuration into src-dest mappings. | [homepage](https://github.com/jonschlinkert/expand-files \"Expand glob patterns in a declarative configuration into src-dest mappings.\")\n* [expand-target](https://www.npmjs.com/package/expand-target): Expand target definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-target \"Expand target definitions in a declarative configuration.\")\n* [expand-task](https://www.npmjs.com/package/expand-task): Expand and normalize task definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-task \"Expand and normalize task definitions in a declarative configuration.\")\n* [export-files](https://www.npmjs.com/package/export-files): node.js utility for exporting a directory of files as modules. | [homepage](https://github.com/jonschlinkert/export-files \"node.js utility for exporting a directory of files as modules.\")\n* [write](https://www.npmjs.com/package/write): Write files to disk, creating intermediate directories if they don't exist. | [homepage](https://github.com/jonschlinkert/write \"Write files to disk, creating intermediate directories if they don't exist.\")\n\n## Contributing\n\nThis document was generated by [verb-readme-generator](https://github.com/verbose/verb-readme-generator) (a [verb](https://github.com/verbose/verb) generator), please don't edit directly. Any changes to the readme must be made in [.verb.md](.verb.md). See [Building Docs](#building-docs).\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Or visit the [verb-readme-generator](https://github.com/verbose/verb-readme-generator) project to submit bug reports or pull requests for the readme layout template.\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-readme-generator && verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/copy/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on June 19, 2016._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/copy.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "run": true,
    "toc": true,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "related": {
      "list": [
        "expand-config",
        "expand-files",
        "expand-target",
        "expand-task",
        "export-files",
        "write"
      ]
    },
    "reflinks": [
      "gulp",
      "verb",
      "verb-readme-generator"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "0.3.0"
}
